name: Build and Release Binaries

on:
  workflow_run:
    branches:
      - master
  push:
    tags:
      - 'v*'  # Behoud de mogelijkheid om direct op tags te triggeren

env:
  APP_NAME: go-hello

permissions:
  contents: write  # Nodig voor het uploaden van release assets

jobs:
  build:
    runs-on: windows-latest  # Gewijzigd naar windows-latest
    steps:
      # 1. Check de code uit
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # 2. Stel de juiste Go-versie in
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
          check-latest: true

      # 3. Get version info
      - name: Get version info
        id: version
        run: |
          echo "version=$(git describe --tags --abbrev=0)" >> $env:GITHUB_OUTPUT
          echo "commit=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT

      # 4. Bouw de binary
      - name: Build binary
        run: |
          go build -ldflags "-X main.Version=${{ steps.version.outputs.version }} -X main.Commit=${{ steps.version.outputs.commit }}" -o ${{ env.APP_NAME }}.exe

      # 5. Upload de binary als artifact
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: myapp-windows
          path: ${{ env.APP_NAME }}.exe

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Draft Release Notes
        uses: release-drafter/release-drafter@v5
        id: release_notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml
          commitish: ${{ github.sha }}
          tag: ${{ steps.get_tag.outputs.tag }}
          version: ${{ steps.get_tag.outputs.tag }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: myapp-windows
          path: ./binaries/windows

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./binaries/windows/${{ env.APP_NAME }}.exe
          body: ${{ steps.release_notes.outputs.body }}
          tag_name: ${{ steps.get_tag.outputs.tag }}